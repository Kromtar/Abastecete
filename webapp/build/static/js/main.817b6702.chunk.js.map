{"version":3,"sources":["img/market.svg","img/newMarker.svg","reducers/markers.js","reducers/globals.js","reducers/index.js","reducers/test.js","actions/types.js","actions/new_marker.js","actions/load_marker.js","components/NewMarker.js","components/ToolBar.js","components/Filter.js","helpers/iconList.js","components/Home.js","components/Main.js","index.js"],"names":["module","exports","defaultValues","markers","newMarketShowRefPoint","newMarketFromOpen","combineReducers","test","state","action","type","payload","markerList","forEach","element","untilAux","until","location_id","lat","lng","long","name","update","$merge","globals","setNewMarkerRefPointOn","dispatch","setNewMarkerRefPointOff","setNewMarkerFromOpen","setNewMarkerFromClose","require","config","loadMarkers","data","token","a","body","JSON","stringify","latMin","latMax","lngMin","lngMax","headers","process","axios","post","res","console","log","NewMarker","props","now","moment","nombre","time","format","selectCola","value","label","id","selectProducto","optionsList","this","setState","selectedOptionsStyles","color","backgroundColor","optionsListStyles","style","width","position","top","left","transform","s","offset","textAlign","paddingBottom","paddingLeft","paddingRight","onChange","event","target","allowEmpty","showSecond","defaultValue","className","use12Hours","inputReadOnly","marginBottom","options","optionClicked","optionClickedCola","bind","selectedBadgeClicked","selectedBadgeClickedCola","isSingleSelect","optionClickedProducto","selectedBadgeClickedProducto","onClick","Component","connect","actions","ToolBar","paddingTop","renderToolBar","Filter","iconMarket","L","Icon","iconUrl","iconRetinaUrl","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","Point","newMarker","Home","mapRef","React","createRef","zoom","centerLat","centerLng","newMarkerIcon","centerMap","items","Object","entries","markerId","markerData","push","Marker","key","icon","Popup","autoPan","navigator","geolocation","getCurrentPosition","poss","coords","latitude","longitude","enableHighAccuracy","maximumAge","prevProps","prevState","snapshot","center","newMarkerLat","newMarkerLng","displayMap","zIndex","borderRadius","fontSize","textClassName","renderNewMarkerFrom","Map","maxZoom","minZoom","ref","display","onViewportChange","onChangeMapPosition","zoomControl","TileLayer","attribution","url","renderMarker","renderNewMarketIcon","Main","exact","path","component","store","createStore","reducers","compose","applyMiddleware","reduxThunk","window","devToolsExtension","f","ReactDOM","render","document","querySelector"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oeCIvCC,EAAgB,CAClBC,QAAS,ICDPD,EAAgB,CAChBE,uBAAuB,EACvBC,mBAAmB,GCCRC,cAAgB,CAC7BC,KCNa,WAA8B,IAArBC,EAAoB,uDAAZ,EAAIC,EAAQ,uCAC1C,OAAQA,EAAOC,MACb,ICJgB,ODKd,OAAOD,EAAOE,QAChB,QACE,OAAOH,IDEXL,QFYa,WAA0C,IAAjCK,EAAgC,uDAAxBN,EAAgBO,EAAQ,uCACtD,OAAQA,EAAOC,MACb,IIrBwB,eJsBtB,IAAIH,EAAO,GAgBX,OAfAE,EAAOE,QAAQC,WAAWC,SAAQ,SAAAC,GAChC,IAAIC,EAEFA,EADkB,QAAjBD,EAAQE,MACE,wCAEAF,EAAQE,MAErBT,EAAKO,EAAQG,aAAe,CAC1BC,IAAKJ,EAAQI,IACbC,IAAKL,EAAQM,KACbC,KAAMP,EAAQO,KACdL,MAAOD,MAIJO,IAAOd,EAAO,CAACL,QAAS,CAACoB,OAAQhB,KAE1C,QACE,OAAOC,IEjCXgB,QDDa,WAA0C,IAAjChB,EAAgC,uDAAxBN,EAAgBO,EAAQ,uCACtD,OAAQA,EAAOC,MACb,IGV6B,oBHW3B,OAAOY,IAAOd,EAAO,CAACe,OAAQd,EAAOE,UACvC,QACE,OAAOH,M,wIIVAiB,EAAyB,kBAAM,SAAAC,GAC1CA,EAAS,CAAEhB,KDJoB,oBCIKC,QAAS,CAACP,uBAAuB,OAG1DuB,EAA0B,kBAAM,SAAAD,GAC3CA,EAAS,CAAEhB,KDRoB,oBCQKC,QAAS,CAACP,uBAAuB,OAG1DwB,EAAuB,kBAAM,SAAAF,GACxCA,EAAS,CAAEhB,KDZoB,oBCYKC,QAAS,CAACN,mBAAmB,OAGtDwB,EAAwB,kBAAM,SAAAH,GACzCA,EAAS,CAAEhB,KDhBoB,oBCgBKC,QAAS,CAACN,mBAAmB,O,4CCXnEyB,EAAQ,KAAUC,SAEX,IAAMC,EAAc,SAACC,EAAMC,GAAP,8CAAiB,WAAOR,GAAP,mBAAAS,EAAA,sEAEhCC,EAAOC,KAAKC,UAAU,CAAEC,QAAS,IAAKC,OAAQ,IAAKC,QAAS,IAAKC,OAAQ,MACzEX,EAAS,CACTY,QAAS,CACL,eAAgB,mBAChB,YAAaC,6CANe,SASlBC,IAAMC,KAAK,gFAAgFV,EAAKL,GAT9E,cAS9BgB,EAT8B,OAUpCrB,EAAS,CAAEhB,KFhBS,eEgBWC,QAAS,CAACC,WAAYmC,EAAId,QAVrB,mBAW7B,GAX6B,yCAapCe,QAAQC,IAAR,MAboC,mBAc7B,GAd6B,0DAAjB,uD,2CCCrBC,G,mBAEJ,WAAYC,GAAO,IAAD,sBAChB,4CAAMA,IACN,IAAMC,EAAMC,MAFI,OAGhB,EAAK7C,MAAQ,CACX8C,OAAO,GACPC,KAAKH,EACLI,OAAQ,SACRC,WAAY,CACV,CAACC,OAAO,EAAOC,MAAO,OAAQC,GAAI,GAClC,CAACF,OAAO,EAAOC,MAAO,OAAQC,GAAI,GAClC,CAACF,OAAO,EAAOC,MAAO,OAAQC,GAAI,GAClC,CAACF,OAAO,EAAOC,MAAO,QAASC,GAAI,IAErCC,eAAgB,CACd,CAACH,OAAO,EAAOC,MAAO,UAAWC,GAAI,GACrC,CAACF,OAAO,EAAOC,MAAO,WAAYC,GAAI,GACtC,CAACF,OAAO,EAAOC,MAAO,eAAgBC,GAAI,KAhB9B,E,+EAqBAE,GAChBC,KAAKC,SAAS,CAAEP,WAAYK,M,+CAGLA,GACvBC,KAAKC,SAAS,CAAEP,WAAYK,M,4CAGRA,GACpBC,KAAKC,SAAS,CAAEH,eAAgBC,M,mDAGLA,GAC3BC,KAAKC,SAAS,CAAEH,eAAgBC,M,+BAGxB,IAAD,OACDG,EAAwB,CAC5BC,MAAO,UACPC,gBAAiB,WAEbC,EAAoB,CACxBD,gBAAiB,UACjBD,MAAO,WAET,OACE,6BACE,kBAAC,MAAD,CAAKG,MAAO,CAACC,MAAM,OAAQC,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOC,UAAW,yBACnF,kBAAC,MAAD,CAAKC,EAAG,EAAGC,OAAO,KAAKP,MAAO,CAACQ,UAAU,SAAUC,cAAe,SAAlE,gDAGA,kBAAC,MAAD,CAAKH,EAAG,GAAIC,OAAO,KAAKP,MAAO,CAACU,YAAY,MAAOC,aAAc,QAC/D,kBAAC,YAAD,CAAWrB,MAAM,sBAAsBD,MAAOK,KAAKvD,MAAM8C,OAAQ2B,SAAU,SAACC,GAAD,OAAW,EAAKlB,SAAS,CAACV,OAAQ4B,EAAMC,OAAOzB,YAE5H,kBAAC,MAAD,CAAKiB,EAAG,GAAIC,OAAO,KAAKP,MAAO,CAACQ,UAAU,SAAUC,cAAe,SAAnE,0BACuB,OAAU,OAC/B,kBAAC,IAAD,CACEM,YAAY,EACZC,YAAY,EACZC,aAAcvB,KAAKvD,MAAM+C,KACzBgC,UAAU,MACVN,SAAU,SAAC1B,GAAD,OAAU,EAAKS,SAAS,CAACT,KAAKA,KACxCC,OAAQO,KAAKvD,MAAMgD,OACnBgC,YAAU,EACVC,eAAa,KAGjB,kBAAC,MAAD,CAAKd,EAAG,GAAIC,OAAO,KAAKP,MAAO,CAACQ,UAAU,SAAUC,cAAe,SACjE,uBAAGT,MAAO,CAACqB,aAAc,QAAzB,wBACA,kBAAC,IAAD,CACEC,QAAS5B,KAAKvD,MAAMiD,WACpBmC,cAAe7B,KAAK8B,kBAAkBC,KAAK/B,MAC3CgC,qBAAsBhC,KAAKiC,yBAAyBF,KAAK/B,MACzDE,sBAAuBA,EACvBG,kBAAmBA,EACnB6B,gBAAgB,KAGpB,kBAAC,MAAD,CAAKtB,EAAG,GAAIC,OAAO,KAAKP,MAAO,CAACQ,UAAU,SAAUC,cAAe,SACjE,uBAAGT,MAAO,CAACqB,aAAc,QAAzB,uCACA,kBAAC,IAAD,CACEC,QAAS5B,KAAKvD,MAAMqD,eACpB+B,cAAe7B,KAAKmC,sBAAsBJ,KAAK/B,MAC/CgC,qBAAsBhC,KAAKoC,6BAA6BL,KAAK/B,MAC7DE,sBAAuBA,EACvBG,kBAAmBA,KAGvB,kBAAC,MAAD,CAAKO,EAAG,GAAIN,MAAO,CAACQ,UAAU,SAAUC,cAAe,SACrD,kBAAC,SAAD,CACET,MAAO,CAACF,gBAAiB,UAAWD,MAAO,WAC3CkC,QAAU,WAAO,EAAKjD,MAAMtB,wBAAyB,EAAKsB,MAAMxB,4BAFlE,qBAOF,kBAAC,MAAD,CAAKgD,EAAG,GAAKN,MAAO,CAACQ,UAAU,WAC7B,kBAAC,SAAD,CACER,MAAO,CAACF,gBAAiB,UAAWD,MAAO,WAC3CkC,QAAU,WAAO,EAAKjD,MAAMtB,wBAAyB,EAAKsB,MAAMxB,4BAFlE,mB,GApGY0E,cAiHTC,cAAQ,KAAKC,EAAbD,CAAsBpD,GCrH/BsD,E,wLAEU,IAAD,OACX,OAAGzC,KAAKZ,MAAM3B,QAAQpB,sBAElB,6BACE,kBAAC,MAAD,CAAKuE,EAAG,EAAGC,OAAO,MAChB,kBAAC,SAAD,CACEP,MAAO,CAACF,gBAAiB,UAAWD,MAAO,WAC3CkC,QAAU,kBAAM,EAAKjD,MAAMxB,4BAF7B,aAOF,kBAAC,MAAD,CAAKgD,EAAG,GACN,kBAAC,SAAD,CACEN,MAAO,CAACF,gBAAiB,UAAWD,MAAO,WAC3CkC,QAAU,kBAAM,EAAKjD,MAAMvB,yBAF7B,eAWJ,kBAAC,SAAD,CACEyC,MAAO,CAACF,gBAAiB,UAAWD,MAAO,WAC3CkC,QAAU,WACR,EAAKjD,MAAM1B,2BAHf,mB,+BAYJ,OACE,6BACI,kBAAC,MAAD,CAAK4C,MAAO,CAACQ,UAAU,SAAUa,aAAc,SAC3C,kBAAC,MAAD,CAAKf,EAAG,GAAIN,MAAO,CAACoC,WAAY,OAAQ3B,cAAe,SACpDf,KAAK2C,uB,GA1CAL,aAwDPC,aANf,SAAyB9F,GACrB,MAAO,CACHgB,QAAShB,EAAMgB,WAIiB+E,EAAzBD,CAAkCE,GAAlCF,IC1DTK,E,iLAGF,OACE,kC,GAJeN,a,GAUNC,cAAUK,G,eCXnBC,EAAa,IAAIC,IAAEC,KAAK,CAC1BC,QAASjF,EAAQ,KACjBkF,cAAelF,EAAQ,KACvBmF,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,EAAG,GACjBC,UAAW,KACXC,WAAY,KACZC,aAAc,KACdC,SAAU,IAAIT,IAAEU,MAAM,GAAI,MAGxBC,EAAY,IAAIX,IAAEC,KAAK,CACzBC,QAASjF,EAAQ,KACjBkF,cAAelF,EAAQ,KACvBmF,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,EAAG,GACjBC,UAAW,KACXC,WAAY,KACZC,aAAc,KACdC,SAAU,IAAIT,IAAEU,MAAM,GAAI,MCPxBE,G,YAEJ,WAAYtE,GAAO,IAAD,8BAChB,4CAAMA,KAcRuE,OAASC,IAAMC,YAbb,EAAKpH,MAAQ,CACXqH,KAAM,GAENC,WAAY,OACZC,WAAY,MACZC,cAAe,CACb9G,KAAM,OACNC,KAAM,QAGV,EAAK8G,UAAY,EAAKA,UAAUnC,KAAf,gBAZD,E,uEAiBR5E,EAAKC,GACb4C,KAAKC,SAAS,CAAC8D,UAAW5G,EAAK6G,UAAW5G,M,qCAM1C,IAAM+G,EAAQ,GAmBd,OAlBInE,KAAKZ,MAAM3B,QAAQpB,uBACrB+H,OAAOC,QAAQrE,KAAKZ,MAAMhD,SAASU,SAAQ,SAASoB,GAClD,IAAMoG,EAAWpG,EAAK,GAChBqG,EAAarG,EAAK,GACxBiG,EAAMK,KACJ,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EACL9D,SAAU,CAAC+D,EAAWpH,IAAKoH,EAAWnH,KACtCuH,KAAM9B,GAEN,kBAAC+B,EAAA,EAAD,CAAOC,SAAS,GACd,2BAAG,2BAAIN,EAAWjH,OAClB,+CAAoB,2BAAIiH,EAAWtH,cAMtC,kBAAC,IAAD,KAAqBkH,K,4CAI5B,GAAGnE,KAAKZ,MAAM3B,QAAQpB,sBACpB,OACE,kBAACoI,EAAA,EAAD,CACEjE,SAAU,CAACR,KAAKvD,MAAMwH,cAAc9G,IAAK6C,KAAKvD,MAAMwH,cAAc7G,KAClEuH,KAAMlB,M,0CAMM,IAAD,OACjBzD,KAAKZ,MAAMnB,cAiBX6G,UAAUC,YAAYC,oBAAmB,SAACC,GACxC,IAAI9H,EAAM8H,EAAKC,OAAOC,SAClB/H,EAAM6H,EAAKC,OAAOE,UACH,qBAATjI,GAAwC,qBAATC,IACvC6B,QAAQC,IAAI/B,GACZ8B,QAAQC,IAAI9B,GACZ,EAAK6C,SAAS,CACZ8D,UAAW5G,EACX6G,UAAW5G,OAGf,KAfY,CACZiI,oBAAoB,EACpBC,WAAY,M,yCAeGC,EAAWC,EAAWC,GAIvC,OAAO,I,0CAGWvH,GAClB8B,KAAKC,SAAS,CACZgE,cAAe,CACb9G,IAAKe,EAAKwH,OAAO,GACjBtI,IAAKc,EAAKwH,OAAO,Q,4CAqBrB,GAAG1F,KAAKZ,MAAM3B,QAAQnB,kBACpB,OACE,kBAAC,EAAD,CACEqJ,aAAc3F,KAAKvD,MAAMwH,cAAc9G,IACvCyI,aAAc5F,KAAKvD,MAAMwH,cAAc7G,Q,+BAMrC,IAAD,OACDyI,EAAa7F,KAAKZ,MAAM3B,QAAQnB,kBAAoB,OAAS,QACnE,OACE,6BACE,kBAAC,OAAD,CACEgE,MAAO,CAACE,SAAS,WAAWD,MAAM,OAAOuF,OAAO,SAAUC,aAAc,OAAQC,SAAU,QAC1FxE,UAAU,qBACVyE,cAAc,cAHhB,2JAOCjG,KAAKkG,sBACN,kBAACC,EAAA,EAAD,CACEC,QAAS,GACTC,QAAS,EACTC,IAAKtG,KAAK2D,OACVrD,MAAO,CAACiG,QAASV,GACjBH,OAAQ,CAAC1F,KAAKvD,MAAMsH,UAAU/D,KAAKvD,MAAMuH,WACzCF,KAAM9D,KAAKvD,MAAMqH,KACjB0C,iBAAkB,SAACtI,GAAD,OAAU,EAAKuI,oBAAoBvI,IACrDwI,aAAa,GAEb,kBAACC,EAAA,EAAD,CACEC,YAAY,mFACZC,IAAI,uDAEL7G,KAAK8G,eACL9G,KAAK+G,4B,GA/JGzE,aAuLJC,oBAPf,SAAyB9F,GACvB,MAAO,CACLL,QAASK,EAAML,QAAQA,QACvBqB,QAAShB,EAAMgB,WAIoB+E,EAAxBD,CAAiCmB,ICtLjCsD,GAVF,WACX,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAWzD,QCM1C0D,GAAQC,YAAYC,EAAU,GAClCC,YACEC,YAAgBC,KAChBC,OAAOC,kBAAoBD,OAAOC,oBAAsB,SAAAC,GAAC,OAAIA,KAIjEC,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,IACb,kBAAC,GAAD,OAEJW,SAASC,cAAc,Y","file":"static/js/main.817b6702.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/market.4497199f.svg\";","module.exports = __webpack_public_path__ + \"static/media/newMarker.d04a1686.svg\";","import update from 'react-addons-update';\r\n\r\nimport { LOAD_MARKERS } from '../actions/types';\r\n\r\nvar defaultValues = {\r\n  markers: {\r\n    /*\r\n      a0001:{\r\n        lat: -32.949715,\r\n        lng: -71.544152,\r\n        name: 'a'\r\n      },\r\n      a0002:{\r\n        lat: 50.505,\r\n        lng: -0.09,\r\n        name: 'b'\r\n      },\r\n    */\r\n  }\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  switch (action.type){\r\n    case LOAD_MARKERS:\r\n      let test = {};\r\n      action.payload.markerList.forEach(element => {\r\n        let untilAux;\r\n        if(element.until == 'null'){\r\n          untilAux = 'Estamos averiguando para usted ♥';\r\n        }else{\r\n          untilAux = element.until;\r\n        }\r\n        test[element.location_id] = {\r\n          lat: element.lat,\r\n          lng: element.long,\r\n          name: element.name,\r\n          until: untilAux\r\n        }\r\n      });\r\n      //console.log(test);\r\n      return update(state, {markers: {$merge: test}} );\r\n      //return state;\r\n    default:\r\n      return state;\r\n  }\r\n}","import update from 'react-addons-update';\r\n\r\nimport { SET_GLOBAL_CONFIG } from '../actions/types';\r\n\r\nvar defaultValues = {\r\n    newMarketShowRefPoint: false,\r\n    newMarketFromOpen: false\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  switch (action.type){\r\n    case SET_GLOBAL_CONFIG:\r\n      return update(state, {$merge: action.payload} );\r\n    default:\r\n      return state;\r\n  }\r\n}","  \r\nimport { combineReducers } from 'redux';\r\n\r\nimport test from './test';\r\nimport markers from './markers';\r\nimport globals from './globals';\r\n\r\nexport default combineReducers({\r\n  test: test,\r\n  markers: markers,\r\n  globals: globals\r\n});","import { TEST } from '../actions/types';\r\n\r\nexport default function(state = 0 , action) {\r\n  switch (action.type){\r\n    case TEST:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","export const TEST = 'test';\r\nexport const SET_GLOBAL_CONFIG = 'set_global_config';\r\nexport const LOAD_MARKERS = 'load_markers';","import {\r\n    SET_GLOBAL_CONFIG\r\n } from './types';\r\n \r\nexport const setNewMarkerRefPointOn = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketShowRefPoint: true}});\r\n};\r\n\r\nexport const setNewMarkerRefPointOff = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketShowRefPoint: false}});\r\n};\r\n\r\nexport const setNewMarkerFromOpen = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketFromOpen: true}});\r\n};\r\n\r\nexport const setNewMarkerFromClose = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketFromOpen: false}});\r\n};\r\n\r\n","import axios from 'axios';\r\n\r\nimport {\r\n    LOAD_MARKERS\r\n} from './types';\r\n\r\nrequire('dotenv').config();\r\n\r\nexport const loadMarkers = (data, token) => async (dispatch) => {\r\n    try {\r\n        let body = JSON.stringify({ latMin: -100, latMax: 100, lngMin: -100, lngMax: 100 })\r\n        let config = {\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'X-Api-Key': process.env.REACT_APP_FIREBASE_API_KEY\r\n            }\r\n        }\r\n        const res = await axios.post('https://f5uu7v12oa.execute-api.us-east-1.amazonaws.com/staging/locations/list',body,config);\r\n        dispatch({ type: LOAD_MARKERS, payload: {markerList: res.data}});\r\n        return true;\r\n    } catch (err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, TextInput, Button, Select } from 'react-materialize';\r\nimport TimePicker from 'rc-time-picker';\r\nimport moment from 'moment';\r\nimport  MultiSelectReact  from 'multi-select-react';\r\nimport 'rc-time-picker/assets/index.css';\r\nimport * as actions from '../actions';\r\n\r\nclass NewMarker extends Component { \r\n\r\n  constructor(props){\r\n    super(props);\r\n    const now = moment();\r\n    this.state = {\r\n      nombre:'', \r\n      time:now,\r\n      format: 'h:mm a',\r\n      selectCola: [\r\n        {value: false, label: \"Nada\", id: 1},\r\n        {value: false, label: \"Poco\", id: 2},\r\n        {value: false, label: \"Algo\", id: 3},\r\n        {value: false, label: \"Mucho\", id: 4}\r\n      ],\r\n      selectProducto: [\r\n        {value: false, label: \"Bencian\", id: 1},\r\n        {value: false, label: \"Abarrote\", id: 2},\r\n        {value: false, label: \"Medicamentos\", id: 3}\r\n      ]\r\n    }\r\n  }\r\n\r\n  optionClickedCola(optionsList) {\r\n    this.setState({ selectCola: optionsList });\r\n  }\r\n\r\n  selectedBadgeClickedCola(optionsList) {\r\n    this.setState({ selectCola: optionsList });\r\n  }\r\n\r\n  optionClickedProducto(optionsList) {\r\n    this.setState({ selectProducto: optionsList });\r\n  }\r\n\r\n  selectedBadgeClickedProducto(optionsList) {\r\n    this.setState({ selectProducto: optionsList });\r\n  }\r\n\r\n  render() {\r\n    const selectedOptionsStyles = {\r\n      color: \"#160c28\",\r\n      backgroundColor: \"#efcb68\"\r\n    };\r\n    const optionsListStyles = {\r\n      backgroundColor: \"#fcf8e3\",\r\n      color: \"#8a6d3b\"\r\n    };\r\n    return (\r\n      <div>\r\n        <Row style={{width:'100%', position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)'}}>\r\n          <Col s={8} offset='s2' style={{textAlign:'center', paddingBottom: '10px'}}>\r\n            Ayudanos a recolectar algo de informacion :)\r\n          </Col>\r\n          <Col s={10} offset='s1' style={{paddingLeft:'0px', paddingRight: '0px'}}>\r\n            <TextInput label=\"Nombre de la tienda\" value={this.state.nombre} onChange={(event) => this.setState({nombre: event.target.value})} />\r\n          </Col>\r\n          <Col s={10} offset='s1' style={{textAlign:'center', paddingBottom: '10px'}}>\r\n            ¿A que hora cierra?:{'\\u00A0'}{'\\u00A0'}\r\n            <TimePicker\r\n              allowEmpty={false}\r\n              showSecond={false}\r\n              defaultValue={this.state.time}\r\n              className=\"xxx\"\r\n              onChange={(time) => this.setState({time:time})}\r\n              format={this.state.format}\r\n              use12Hours\r\n              inputReadOnly\r\n            />\r\n          </Col>\r\n          <Col s={10} offset='s1' style={{textAlign:'center', paddingBottom: '10px'}}>\r\n            <p style={{marginBottom: '5px'}}>¿Cuanta cola hay?</p>\r\n            <MultiSelectReact \r\n              options={this.state.selectCola}\r\n              optionClicked={this.optionClickedCola.bind(this)}\r\n              selectedBadgeClicked={this.selectedBadgeClickedCola.bind(this)}\r\n              selectedOptionsStyles={selectedOptionsStyles}\r\n              optionsListStyles={optionsListStyles}\r\n              isSingleSelect={true}\r\n            />\r\n          </Col>\r\n          <Col s={10} offset='s1' style={{textAlign:'center', paddingBottom: '10px'}}>\r\n            <p style={{marginBottom: '5px'}}>¿ Que encontraste en este lugar?</p>\r\n            <MultiSelectReact \r\n              options={this.state.selectProducto}\r\n              optionClicked={this.optionClickedProducto.bind(this)}\r\n              selectedBadgeClicked={this.selectedBadgeClickedProducto.bind(this)}\r\n              selectedOptionsStyles={selectedOptionsStyles}\r\n              optionsListStyles={optionsListStyles}\r\n            />\r\n          </Col>\r\n          <Col s={12} style={{textAlign:'center', paddingBottom: '10px'}}>\r\n            <Button  \r\n              style={{backgroundColor: '#efcb68', color: '#000411'}}\r\n              onClick={ () => {this.props.setNewMarkerFromClose(); this.props.setNewMarkerRefPointOff();}}\r\n            >\r\n              Agregar el local\r\n            </Button >\r\n          </Col>\r\n          <Col s={12}  style={{textAlign:'center'}}>\r\n            <Button  \r\n              style={{backgroundColor: '#aeb7b3', color: '#000411'}}\r\n              onClick={ () => {this.props.setNewMarkerFromClose(); this.props.setNewMarkerRefPointOff();}}\r\n            >\r\n              Cancelar\r\n            </Button >\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(null,actions)(NewMarker);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Row, Col } from 'react-materialize';\r\nimport * as actions from '../actions';\r\n\r\nclass ToolBar extends Component { \r\n\r\nrenderToolBar(){\r\n    if(this.props.globals.newMarketShowRefPoint){\r\n      return(\r\n        <div>\r\n          <Col s={4} offset='s2'>\r\n            <Button  \r\n              style={{backgroundColor: '#aeb7b3', color: '#000411'}}\r\n              onClick={ () => this.props.setNewMarkerRefPointOff() }\r\n            >\r\n              Cancelar\r\n            </Button >\r\n          </Col>\r\n          <Col s={4}>\r\n            <Button\r\n              style={{backgroundColor: '#efcb68', color: '#000411'}}\r\n              onClick={ () => this.props.setNewMarkerFromOpen() }\r\n            >\r\n              Continuar\r\n            </Button >\r\n          </Col>\r\n        </div>\r\n      );\r\n    }else{\r\n      return(\r\n        <Button\r\n          style={{backgroundColor: '#efcb68', color: '#000411'}}\r\n          onClick={ () => {\r\n            this.props.setNewMarkerRefPointOn()} }\r\n        >\r\n          Agregar local\r\n        </Button >\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <Row style={{textAlign:'center', marginBottom: '10px'}}>\r\n              <Col s={12} style={{paddingTop: '10px', paddingBottom: '10px'}}>\r\n                {this.renderToolBar()}\r\n              </Col>\r\n            </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        globals: state.globals\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(ToolBar);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Filter extends Component { \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(Filter);","import L from 'leaflet';\r\n\r\nconst iconMarket = new L.Icon({\r\n    iconUrl: require('../img/market.svg'),\r\n    iconRetinaUrl: require('../img/market.svg'),\r\n    iconAnchor: [30, 65],\r\n    popupAnchor: [0, 0],\r\n    shadowUrl: null,\r\n    shadowSize: null,\r\n    shadowAnchor: null,\r\n    iconSize: new L.Point(60, 75),\r\n});\r\n\r\nconst newMarker = new L.Icon({\r\n    iconUrl: require('../img/newMarker.svg'),\r\n    iconRetinaUrl: require('../img/newMarker.svg'),\r\n    iconAnchor: [30, 65],\r\n    popupAnchor: [0, 0],\r\n    shadowUrl: null,\r\n    shadowSize: null,\r\n    shadowAnchor: null,\r\n    iconSize: new L.Point(60, 75),\r\n});\r\n\r\nexport { iconMarket, newMarker };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport Control from 'react-leaflet-control';\r\nimport { Card } from 'react-materialize';\r\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\r\nimport * as actions from '../actions';\r\n\r\nimport NewMarker from './NewMarker';\r\nimport ToolBar from './ToolBar';\r\nimport Filter from './Filter';\r\n\r\nimport {iconMarket, newMarker} from '../helpers/iconList';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      zoom: 14,\r\n      //TODO: Cambiar a globales\r\n      centerLat: -33.019,\r\n      centerLng: -71.550,\r\n      newMarkerIcon: {\r\n        lat: -33.019,\r\n        lng: -71.550\r\n      }\r\n    }\r\n    this.centerMap = this.centerMap.bind(this);\r\n  }\r\n\r\n  mapRef = React.createRef();\r\n\r\n  centerMap(lat, lng){\r\n    this.setState({centerLat: lat, centerLng: lng});\r\n  }\r\n\r\n  // this.centerMap(markerData.lat, markerData.lng)\r\n\r\n  renderMarker(){\r\n    const items = [];\r\n    if(!this.props.globals.newMarketShowRefPoint){\r\n      Object.entries(this.props.markers).forEach(function(data) {\r\n        const markerId = data[0];\r\n        const markerData = data[1];\r\n        items.push(\r\n          <Marker \r\n            key={markerId} \r\n            position={[markerData.lat, markerData.lng]}\r\n            icon={iconMarket}\r\n          >\r\n            <Popup autoPan={false}>\r\n              <p><b>{markerData.name}</b></p>\r\n              <p>Se cierra a las: <b>{markerData.until}</b></p>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n    }\r\n    return(<MarkerClusterGroup>{items}</MarkerClusterGroup>);\r\n  }\r\n\r\n  renderNewMarketIcon(){\r\n    if(this.props.globals.newMarketShowRefPoint){\r\n      return(\r\n        <Marker \r\n          position={[this.state.newMarkerIcon.lat, this.state.newMarkerIcon.lng]}\r\n          icon={newMarker}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.loadMarkers();\r\n    /*\r\n    let bounds = this.mapRef.current.leafletElement.getBounds();\r\n    let mapwidh = Math.abs(bounds._northEast.lat - bounds._southWest.lat); //ancho\r\n    let mapheight = Math.abs(bounds._northEast.lng - bounds._southWest.lng); //alto\r\n    console.log(\"Se frist last coord for request\");\r\n    this.setState({\r\n      lastLatMax: bounds._northEast.lat + mapwidh,\r\n      lastLatMin: bounds._southWest.lat - mapwidh,\r\n      lastLngMax: bounds._northEast.lng + mapheight,\r\n      lastLngMin: bounds._northEast.lng - mapheight\r\n    });\r\n    */\r\n    var options = {\r\n      enableHighAccuracy: true,\r\n      maximumAge: 0\r\n    };\r\n    navigator.geolocation.getCurrentPosition((poss) =>{\r\n      let lat = poss.coords.latitude;\r\n      let lng = poss.coords.longitude;\r\n      if(typeof(lat) !== 'undefined' && typeof(lng) !== 'undefined'){\r\n        console.log(lat);\r\n        console.log(lng);\r\n        this.setState({\r\n          centerLat: lat,\r\n          centerLng: lng,\r\n        });\r\n      }\r\n    },null,options);\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    //console.log(prevProps);\r\n    //console.log(prevState);\r\n    //console.log(snapshot);\r\n    return true;\r\n  }\r\n\r\n  onChangeMapPosition(data){\r\n    this.setState({\r\n      newMarkerIcon: {\r\n        lat: data.center[0],\r\n        lng: data.center[1]\r\n      }\r\n    });\r\n    \r\n    //let bounds = this.mapRef.current.leafletElement.getBounds();\r\n    //console.log(bounds._northEast.lat); //arriba derecha de la ventana\r\n    //console.log(bounds._northEast.lng);\r\n    //console.log(bounds._southWest.lat); //abajo izquierda de la venana\r\n    //console.log(bounds._southWest.lng);\r\n    //let mapwidh = Math.abs(bounds._northEast.lat - bounds._southWest.lat); //ancho\r\n    //let mapheight = Math.abs(bounds._northEast.lng - bounds._southWest.lng); //alto\r\n    //console.log(mapwidh);\r\n    //console.log(mapheight);\r\n    //console.log(bounds._northEast.lat + mapwidh); //limite superior de carga (pared de la derecha)\r\n    //console.log(bounds._southWest.lat - mapwidh); //lminte inferior de carga (pared de la izquierda)\r\n    //console.log(bounds._northEast.lng + mapheight); //lminte inferior de carga (techo)\r\n    //console.log(bounds._northEast.lng - mapheight); //lminte inferior de carga (base)\r\n\r\n  }\r\n\r\n  renderNewMarkerFrom(){\r\n    if(this.props.globals.newMarketFromOpen){\r\n      return(\r\n        <NewMarker\r\n          newMarkerLat={this.state.newMarkerIcon.lat}\r\n          newMarkerLng={this.state.newMarkerIcon.lng}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const displayMap = this.props.globals.newMarketFromOpen ? 'none' : 'block';\r\n    return (\r\n      <div>\r\n        <Card\r\n          style={{position:'absolute',width:'100%',zIndex:'100000', borderRadius: '40px', fontSize: '10px'}}\r\n          className=\"blue-grey darken-1\"\r\n          textClassName=\"white-text\"\r\n        >\r\n          Estamos trabajando para que mañana miércoles puedas saber dónde abastecerte. Trabajamos sin fines de lucro y confiamos en las personas ♥.\r\n        </Card>\r\n        {this.renderNewMarkerFrom()}\r\n        <Map \r\n          maxZoom={19}\r\n          minZoom={5}\r\n          ref={this.mapRef}\r\n          style={{display: displayMap}}\r\n          center={[this.state.centerLat,this.state.centerLng]}\r\n          zoom={this.state.zoom}\r\n          onViewportChange={(data) => this.onChangeMapPosition(data)}\r\n          zoomControl={false}\r\n        >\r\n          <TileLayer\r\n            attribution='&amp;copy OpenStreetMap \\m/ <font color=\"#160c28\"> Con ♥ por Sudo B00yz</font>'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.renderMarker()}\r\n          {this.renderNewMarketIcon()}\r\n          {/*\r\n          <Control position=\"topleft\">\r\n            <Filter/>\r\n          </Control>\r\n          */}\r\n          {/*\r\n          <Control position=\"bottomleft\" >\r\n            <ToolBar/>\r\n          </Control>\r\n          */}\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    markers: state.markers.markers,\r\n    globals: state.globals\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,actions)(Home);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\n\r\nconst Main = () => {\r\n  return(\r\n    <BrowserRouter>\r\n      <div>\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Main;","import 'materialize-css/dist/js/materialize.min.js'\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'react-leaflet-markercluster/dist/styles.min.css'; \nimport './css/customCss.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport Main from './components/Main';\n\n//TODO: quitar loger de redux dev tools para production\nconst store = createStore(reducers, {},\n  compose(\n    applyMiddleware(reduxThunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n  );\n\nReactDOM.render(\n  <Provider store={store}>\n      <Main />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}