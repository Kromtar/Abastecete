{"version":3,"sources":["reducers/markers.js","reducers/globals.js","reducers/index.js","reducers/test.js","actions/types.js","actions/new_marker.js","components/NewMarker.js","components/ToolBar.js","components/Filter.js","components/Home.js","components/Main.js","index.js"],"names":["defaultValues","markers","a0001","lat","lng","a0002","newMarketShowRefPoint","newMarketFromOpen","combineReducers","test","state","action","type","payload","globals","update","$merge","setNewMarkerRefPointOn","dispatch","setNewMarkerRefPointOff","setNewMarkerFromOpen","setNewMarkerFromClose","NewMarker","Component","connect","ToolBar","this","props","s","onClick","style","textAlign","renderToolBar","actions","Filter","Home","zoom","centerLat","centerLng","newMarkerIcon","items","Object","entries","forEach","data","markerId","markerData","push","Marker","key","position","Popup","setState","center","newMarkerLat","newMarkerLng","renderNewMarkerFrom","Map","display","onViewportChange","onChangeMapPosition","zoomControl","TileLayer","attribution","url","renderMarker","renderNewMarketIcon","Main","exact","path","component","store","createStore","reducers","compose","applyMiddleware","reduxThunk","window","devToolsExtension","f","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2611b453.chunk.js","sourcesContent":["import update from 'react-addons-update';\r\n\r\nvar defaultValues = {\r\n  markers: {\r\n      a0001:{\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      },\r\n      a0002:{\r\n        lat: 50.505,\r\n        lng: -0.09\r\n      },\r\n  }\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  switch (action.type){\r\n    default:\r\n      return state;\r\n  }\r\n}","import update from 'react-addons-update';\r\n\r\nimport { SET_GLOBAL_CONFIG } from '../actions/types';\r\n\r\nvar defaultValues = {\r\n    newMarketShowRefPoint: false,\r\n    newMarketFromOpen: false\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  switch (action.type){\r\n    case SET_GLOBAL_CONFIG:\r\n      return update(state, {$merge: action.payload} );\r\n    default:\r\n      return state;\r\n  }\r\n}","  \r\nimport { combineReducers } from 'redux';\r\n\r\nimport test from './test';\r\nimport markers from './markers';\r\nimport globals from './globals';\r\n\r\nexport default combineReducers({\r\n  test: test,\r\n  markers: markers,\r\n  globals: globals\r\n});","import { TEST } from '../actions/types';\r\n\r\nexport default function(state = 0 , action) {\r\n  switch (action.type){\r\n    case TEST:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","export const TEST = 'test';\r\nexport const SET_GLOBAL_CONFIG = 'set_global_config';","import {\r\n    SET_GLOBAL_CONFIG\r\n } from './types';\r\n \r\nexport const setNewMarkerRefPointOn = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketShowRefPoint: true}});\r\n};\r\n\r\nexport const setNewMarkerRefPointOff = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketShowRefPoint: false}});\r\n};\r\n\r\nexport const setNewMarkerFromOpen = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketFromOpen: true}});\r\n};\r\n\r\nexport const setNewMarkerFromClose = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketFromOpen: false}});\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass NewMarker extends Component { \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         VENTANA PARA CREAR PUNTO\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(NewMarker);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Row, Col } from 'react-materialize';\r\nimport * as actions from '../actions';\r\n\r\nclass ToolBar extends Component { \r\n\r\nrenderToolBar(){\r\n    if(this.props.globals.newMarketShowRefPoint){\r\n      return(\r\n        <div>\r\n          <Col s={6}>\r\n            <Button  \r\n              onClick={ () => this.props.setNewMarkerRefPointOff() }\r\n            >\r\n              Cancelar\r\n            </Button >\r\n          </Col>\r\n          <Col s={6}>\r\n            <Button  \r\n              onClick={ () => this.props.setNewMarkerFromOpen() }\r\n            >\r\n              Continuar\r\n            </Button >\r\n          </Col>\r\n        </div>\r\n      );\r\n    }else{\r\n      return(\r\n        <Button  \r\n          onClick={ () => this.props.setNewMarkerRefPointOn() }\r\n        >\r\n          Nuevo punto\r\n        </Button >\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <Row style={{textAlign:'center'}}>\r\n              <Col s={12}>\r\n                {this.renderToolBar()}\r\n              </Col>\r\n            </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        globals: state.globals\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(ToolBar);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Filter extends Component { \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         FILTRO\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(Filter);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport Control from 'react-leaflet-control';\r\nimport { Button, Row, Col, Modal } from 'react-materialize';\r\nimport * as actions from '../actions';\r\n\r\nimport NewMarker from './NewMarker';\r\nimport ToolBar from './ToolBar';\r\nimport Filter from './Filter';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      zoom: 13,\r\n      //TODO: Cambiar a globales\r\n      centerLat: 51.505,\r\n      centerLng: -0.09,\r\n      newMarkerIcon: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      }\r\n    }\r\n  }\r\n\r\n  renderMarker(){\r\n    const items = [];\r\n    if(!this.props.globals.newMarketShowRefPoint){\r\n      Object.entries(this.props.markers).forEach(function(data) {\r\n        const markerId = data[0];\r\n        const markerData = data[1];\r\n        items.push(\r\n          <Marker \r\n            key={markerId} \r\n            position={[markerData.lat, markerData.lng]}\r\n          >\r\n            <Popup>\r\n              Mi ID es: {markerId}\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n    }\r\n    return(<div>{items}</div>);\r\n  }\r\n\r\n  renderNewMarketIcon(){\r\n    if(this.props.globals.newMarketShowRefPoint){\r\n      return(\r\n        <Marker \r\n          position={[this.state.newMarkerIcon.lat, this.state.newMarkerIcon.lng]}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  onChangeMapPosition(data){\r\n    this.setState({\r\n      newMarkerIcon: {\r\n        lat: data.center[0],\r\n        lng: data.center[1]\r\n      }\r\n    })\r\n  }\r\n\r\n  renderNewMarkerFrom(){\r\n    if(this.props.globals.newMarketFromOpen){\r\n      return(\r\n        <NewMarker\r\n          newMarkerLat={this.state.newMarkerIcon.lat}\r\n          newMarkerLng={this.state.newMarkerIcon.lng}\r\n        />\r\n      );\r\n    }\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderNewMarkerFrom()}\r\n        <Map \r\n          style={{display: this.props.globals.newMarketFromOpen ? 'none' : 'bock'}}\r\n          center={[this.state.centerLat,this.state.centerLng]}\r\n          zoom={this.state.zoom}\r\n          onViewportChange={(data) => this.onChangeMapPosition(data)}\r\n          zoomControl={false}\r\n        >\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.renderMarker()}\r\n          {this.renderNewMarketIcon()}\r\n          <Control position=\"topleft\" >\r\n            <Filter/>\r\n          </Control>\r\n          <Control position=\"bottomleft\" >\r\n            <ToolBar/>\r\n          </Control>\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    markers: state.markers.markers,\r\n    globals: state.globals\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\n\r\nconst Main = () => {\r\n  return(\r\n    <BrowserRouter>\r\n      <div>\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Main;","import 'materialize-css/dist/js/materialize.min.js'\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './css/customCss.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport Main from './components/Main';\n\n//TODO: quitar loger de redux dev tools para production\nconst store = createStore(reducers, {},\n  compose(\n    applyMiddleware(reduxThunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n  );\n\nReactDOM.render(\n  <Provider store={store}>\n      <Main />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}