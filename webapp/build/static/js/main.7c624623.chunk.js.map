{"version":3,"sources":["reducers/markers.js","reducers/globals.js","reducers/index.js","reducers/test.js","actions/types.js","actions/new_marker.js","actions/load_marker.js","components/NewMarker.js","components/ToolBar.js","components/Filter.js","components/Home.js","components/Main.js","index.js"],"names":["defaultValues","markers","a0001","lat","lng","name","a0002","newMarketShowRefPoint","newMarketFromOpen","combineReducers","test","state","action","type","payload","markerList","forEach","element","console","log","location_id","long","update","$merge","globals","setNewMarkerRefPointOn","dispatch","setNewMarkerRefPointOff","setNewMarkerFromOpen","setNewMarkerFromClose","require","config","loadMarkers","data","token","a","body","JSON","stringify","latMin","latMax","lngMin","lngMax","headers","process","axios","post","res","NewMarker","Component","connect","ToolBar","this","props","s","onClick","style","textAlign","renderToolBar","actions","Filter","Home","mapRef","React","createRef","zoom","centerLat","centerLng","newMarkerIcon","items","Object","entries","markerId","markerData","push","Marker","key","position","Popup","autoPan","prevProps","prevState","snapshot","setState","center","newMarkerLat","newMarkerLng","renderNewMarkerFrom","Map","ref","display","onViewportChange","onChangeMapPosition","zoomControl","TileLayer","attribution","url","renderMarker","renderNewMarketIcon","Main","exact","path","component","store","createStore","reducers","compose","applyMiddleware","reduxThunk","window","devToolsExtension","f","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7c624623.chunk.js","sourcesContent":["import update from 'react-addons-update';\r\n\r\nimport { LOAD_MARKERS } from '../actions/types';\r\n\r\nvar defaultValues = {\r\n  markers: {\r\n      a0001:{\r\n        lat: 51.505,\r\n        lng: -0.09,\r\n        name: 'a'\r\n      },\r\n      a0002:{\r\n        lat: 50.505,\r\n        lng: -0.09,\r\n        name: 'b'\r\n      },\r\n  }\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  switch (action.type){\r\n    case LOAD_MARKERS:\r\n      let test = {};\r\n      action.payload.markerList.forEach(element => {\r\n        console.log(element);\r\n        test[element.location_id] = {\r\n          lat: element.lat,\r\n          lng: element.long,\r\n          name: element.name\r\n        }\r\n      });\r\n      console.log(test);\r\n      return update(state, {markers: {$merge: test}} );;\r\n    default:\r\n      return state;\r\n  }\r\n}","import update from 'react-addons-update';\r\n\r\nimport { SET_GLOBAL_CONFIG } from '../actions/types';\r\n\r\nvar defaultValues = {\r\n    newMarketShowRefPoint: false,\r\n    newMarketFromOpen: false\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  switch (action.type){\r\n    case SET_GLOBAL_CONFIG:\r\n      return update(state, {$merge: action.payload} );\r\n    default:\r\n      return state;\r\n  }\r\n}","  \r\nimport { combineReducers } from 'redux';\r\n\r\nimport test from './test';\r\nimport markers from './markers';\r\nimport globals from './globals';\r\n\r\nexport default combineReducers({\r\n  test: test,\r\n  markers: markers,\r\n  globals: globals\r\n});","import { TEST } from '../actions/types';\r\n\r\nexport default function(state = 0 , action) {\r\n  switch (action.type){\r\n    case TEST:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","export const TEST = 'test';\r\nexport const SET_GLOBAL_CONFIG = 'set_global_config';\r\nexport const LOAD_MARKERS = 'load_markers';","import {\r\n    SET_GLOBAL_CONFIG\r\n } from './types';\r\n \r\nexport const setNewMarkerRefPointOn = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketShowRefPoint: true}});\r\n};\r\n\r\nexport const setNewMarkerRefPointOff = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketShowRefPoint: false}});\r\n};\r\n\r\nexport const setNewMarkerFromOpen = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketFromOpen: true}});\r\n};\r\n\r\nexport const setNewMarkerFromClose = () => dispatch => {\r\n  dispatch({ type: SET_GLOBAL_CONFIG, payload: {newMarketFromOpen: false}});\r\n};\r\n\r\n","import axios from 'axios';\r\n\r\nimport {\r\n    LOAD_MARKERS\r\n} from './types';\r\n\r\nrequire('dotenv').config();\r\n\r\nexport const loadMarkers = (data, token) => async (dispatch) => {\r\n    try {\r\n        let body = JSON.stringify({ latMin: -100, latMax: 100, lngMin: -100, lngMax: 100 })\r\n        let config = {\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'X-Api-Key': process.env.REACT_APP_FIREBASE_API_KEY\r\n            }\r\n        }\r\n        const res = await axios.post('https://f5uu7v12oa.execute-api.us-east-1.amazonaws.com/staging/locations/list',body,config);\r\n        dispatch({ type: LOAD_MARKERS, payload: {markerList: res.data}});\r\n        return true;\r\n    } catch (err) {\r\n        console.log(err);\r\n        return false;\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass NewMarker extends Component { \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         VENTANA PARA CREAR PUNTO\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(NewMarker);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Row, Col } from 'react-materialize';\r\nimport * as actions from '../actions';\r\n\r\nclass ToolBar extends Component { \r\n\r\nrenderToolBar(){\r\n    if(this.props.globals.newMarketShowRefPoint){\r\n      return(\r\n        <div>\r\n          <Col s={6}>\r\n            <Button  \r\n              onClick={ () => this.props.setNewMarkerRefPointOff() }\r\n            >\r\n              Cancelar\r\n            </Button >\r\n          </Col>\r\n          <Col s={6}>\r\n            <Button  \r\n              onClick={ () => this.props.setNewMarkerFromOpen() }\r\n            >\r\n              Continuar\r\n            </Button >\r\n          </Col>\r\n        </div>\r\n      );\r\n    }else{\r\n      return(\r\n        <Button  \r\n          onClick={ () => this.props.setNewMarkerRefPointOn() }\r\n        >\r\n          Nuevo punto\r\n        </Button >\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <Row style={{textAlign:'center'}}>\r\n              <Col s={12}>\r\n                {this.renderToolBar()}\r\n              </Col>\r\n            </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        globals: state.globals\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(ToolBar);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Filter extends Component { \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         FILTRO\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect()(Filter);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport Control from 'react-leaflet-control';\r\nimport { Button, Row, Col, Modal } from 'react-materialize';\r\nimport * as actions from '../actions';\r\n\r\nimport NewMarker from './NewMarker';\r\nimport ToolBar from './ToolBar';\r\nimport Filter from './Filter';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      zoom: 13,\r\n      //TODO: Cambiar a globales\r\n      centerLat: -32.931,\r\n      centerLng: -71.528,\r\n      newMarkerIcon: {\r\n        lat: -32.931,\r\n        lng: -71.528\r\n      }\r\n    }\r\n  }\r\n\r\n  mapRef = React.createRef();\r\n\r\n  renderMarker(){\r\n    const items = [];\r\n    if(!this.props.globals.newMarketShowRefPoint){\r\n      Object.entries(this.props.markers).forEach(function(data) {\r\n        const markerId = data[0];\r\n        const markerData = data[1];\r\n        items.push(\r\n          <Marker \r\n            key={markerId} \r\n            position={[markerData.lat, markerData.lng]}\r\n          >\r\n            <Popup autoPan={false}>\r\n              <p><b>{markerData.name}</b></p>\r\n              <p>Cosa 2{markerId}</p>\r\n              <p>Cosa 3{markerId}</p>\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n    }\r\n    return(<div>{items}</div>);\r\n  }\r\n\r\n  renderNewMarketIcon(){\r\n    if(this.props.globals.newMarketShowRefPoint){\r\n      return(\r\n        <Marker \r\n          position={[this.state.newMarkerIcon.lat, this.state.newMarkerIcon.lng]}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.loadMarkers();\r\n    /*\r\n    let bounds = this.mapRef.current.leafletElement.getBounds();\r\n    let mapwidh = Math.abs(bounds._northEast.lat - bounds._southWest.lat); //ancho\r\n    let mapheight = Math.abs(bounds._northEast.lng - bounds._southWest.lng); //alto\r\n    console.log(\"Se frist last coord for request\");\r\n    this.setState({\r\n      lastLatMax: bounds._northEast.lat + mapwidh,\r\n      lastLatMin: bounds._southWest.lat - mapwidh,\r\n      lastLngMax: bounds._northEast.lng + mapheight,\r\n      lastLngMin: bounds._northEast.lng - mapheight\r\n    });\r\n    */\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    //console.log(prevProps);\r\n    //console.log(prevState);\r\n    //console.log(snapshot);\r\n    return true;\r\n  }\r\n\r\n  onChangeMapPosition(data){\r\n    this.setState({\r\n      newMarkerIcon: {\r\n        lat: data.center[0],\r\n        lng: data.center[1]\r\n      }\r\n    });\r\n    \r\n    //let bounds = this.mapRef.current.leafletElement.getBounds();\r\n    //console.log(bounds._northEast.lat); //arriba derecha de la ventana\r\n    //console.log(bounds._northEast.lng);\r\n    //console.log(bounds._southWest.lat); //abajo izquierda de la venana\r\n    //console.log(bounds._southWest.lng);\r\n    //let mapwidh = Math.abs(bounds._northEast.lat - bounds._southWest.lat); //ancho\r\n    //let mapheight = Math.abs(bounds._northEast.lng - bounds._southWest.lng); //alto\r\n    //console.log(mapwidh);\r\n    //console.log(mapheight);\r\n    //console.log(bounds._northEast.lat + mapwidh); //limite superior de carga (pared de la derecha)\r\n    //console.log(bounds._southWest.lat - mapwidh); //lminte inferior de carga (pared de la izquierda)\r\n    //console.log(bounds._northEast.lng + mapheight); //lminte inferior de carga (techo)\r\n    //console.log(bounds._northEast.lng - mapheight); //lminte inferior de carga (base)\r\n\r\n  }\r\n\r\n  renderNewMarkerFrom(){\r\n    if(this.props.globals.newMarketFromOpen){\r\n      return(\r\n        <NewMarker\r\n          newMarkerLat={this.state.newMarkerIcon.lat}\r\n          newMarkerLng={this.state.newMarkerIcon.lng}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderNewMarkerFrom()}\r\n        <Map \r\n          ref={this.mapRef}\r\n          style={{display: this.props.globals.newMarketFromOpen ? 'none' : 'bock'}}\r\n          center={[this.state.centerLat,this.state.centerLng]}\r\n          zoom={this.state.zoom}\r\n          onViewportChange={(data) => this.onChangeMapPosition(data)}\r\n          zoomControl={false}\r\n        >\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.renderMarker()}\r\n          {this.renderNewMarketIcon()}\r\n          <Control position=\"topleft\" >\r\n            <Filter/>\r\n          </Control>\r\n          <Control position=\"bottomleft\" >\r\n            <ToolBar/>\r\n          </Control>\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    markers: state.markers.markers,\r\n    globals: state.globals\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,actions)(Home);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\n\r\nconst Main = () => {\r\n  return(\r\n    <BrowserRouter>\r\n      <div>\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Main;","import 'materialize-css/dist/js/materialize.min.js'\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './css/customCss.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport Main from './components/Main';\n\n//TODO: quitar loger de redux dev tools para production\nconst store = createStore(reducers, {},\n  compose(\n    applyMiddleware(reduxThunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n  );\n\nReactDOM.render(\n  <Provider store={store}>\n      <Main />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}