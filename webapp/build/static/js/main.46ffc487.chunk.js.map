{"version":3,"sources":["reducers/markers.js","reducers/index.js","reducers/test.js","actions/types.js","components/Home.js","components/Main.js","index.js"],"names":["defaultValues","markers","a0001","lat","lng","a0002","combineReducers","test","state","action","type","payload","Home","props","zoom","centerLat","centerLng","newMarketOn","newMarkerIcon","items","Object","entries","this","forEach","data","markerId","markerData","push","Marker","key","position","setState","center","Map","onViewportChange","onChangeMapPosition","TileLayer","attribution","url","renderMarker","renderNewMarketIcon","onClick","bounds","Component","connect","Main","exact","path","component","store","createStore","reducers","compose","applyMiddleware","reduxThunk","window","devToolsExtension","f","ReactDOM","render","document","querySelector"],"mappings":"wLAEIA,G,MAAgB,CAClBC,QAAS,CACLC,MAAM,CACJC,IAAK,OACLC,KAAM,KAERC,MAAM,CACJF,IAAK,OACLC,KAAM,QCJCE,cAAgB,CAC7BC,KCLa,WAA8B,IAArBC,EAAoB,uDAAZ,EAAIC,EAAQ,uCAC1C,OAAQA,EAAOC,MACb,ICJgB,ODKd,OAAOD,EAAOE,QAChB,QACE,OAAOH,IDCXP,QDOa,WAA0C,IAAjCO,EAAgC,uDAAxBR,EAAgBS,EAAQ,uCAGlD,OAFIA,EAAOC,KAEJF,K,yGIXPI,E,YAEJ,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDL,MAAQ,CACXM,KAAM,GACNC,UAAW,OACXC,WAAY,IACZC,aAAa,EACbC,cAAe,CACbf,IAAK,EACLC,IAAK,IATO,E,4EAehB,IAAMe,EAAQ,GAYd,OAXAC,OAAOC,QAAQC,KAAKT,MAAMZ,SAASsB,SAAQ,SAASC,GAClD,IAAMC,EAAWD,EAAK,GAChBE,EAAaF,EAAK,GACxBL,EAAMQ,KACJ,kBAACC,EAAA,EAAD,CACEC,IAAKJ,EACLK,SAAU,CAACJ,EAAWvB,IAAKuB,EAAWtB,WAKrC,6BAAMe,K,4CAIb,GAAGG,KAAKd,MAAMS,YACZ,OACE,kBAACW,EAAA,EAAD,CAAQE,SAAU,CAACR,KAAKd,MAAMU,cAAcf,IAAKmB,KAAKd,MAAMU,cAAcd,S,0CAK5DoB,GAClBF,KAAKS,SAAS,CACZb,cAAe,CACbf,IAAKqB,EAAKQ,OAAO,GACjB5B,IAAKoB,EAAKQ,OAAO,Q,+BAKb,IAAD,OACP,OACE,6BACE,kBAACC,EAAA,EAAD,CACED,OAAQ,CAACV,KAAKd,MAAMO,UAAUO,KAAKd,MAAMQ,WACzCF,KAAMQ,KAAKd,MAAMM,KACjBoB,iBAAkB,SAACV,GAAD,OAAU,EAAKW,oBAAoBX,KAErD,kBAACY,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,uDAELhB,KAAKiB,eACLjB,KAAKkB,sBACN,kBAAC,IAAD,CAASV,SAAS,WAChB,kBAAC,SAAD,CACEW,QAAU,kBAAM,EAAKV,SAAS,CAACW,OAAQ,CAAC,KAAM,QADhD,sB,GAhEOC,aAmFJC,mBANf,SAAyBpC,GACvB,MAAO,CACLP,QAASO,EAAMP,QAAQA,WAIZ2C,CAAyBhC,GC3EzBiC,EAVF,WACX,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAWpC,OCK1CqC,EAAQC,YAAYC,EAAU,GAClCC,YACEC,YAAgBC,KAChBC,OAAOC,kBAAoBD,OAAOC,oBAAsB,SAAAC,GAAC,OAAIA,KAIjEC,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,GACb,kBAAC,EAAD,OAEJW,SAASC,cAAc,W","file":"static/js/main.46ffc487.chunk.js","sourcesContent":["import update from 'react-addons-update';\r\n\r\nvar defaultValues = {\r\n  markers: {\r\n      a0001:{\r\n        lat: 51.505,\r\n        lng: -0.09\r\n      },\r\n      a0002:{\r\n        lat: 50.505,\r\n        lng: -0.09\r\n      },\r\n  }\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  switch (action.type){\r\n    default:\r\n      return state;\r\n  }\r\n}","  \r\nimport { combineReducers } from 'redux';\r\n\r\nimport test from './test';\r\nimport markers from './markers';\r\n\r\nexport default combineReducers({\r\n  test: test,\r\n  markers: markers\r\n});","import { TEST } from '../actions/types';\r\n\r\nexport default function(state = 0 , action) {\r\n  switch (action.type){\r\n    case TEST:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","export const TEST = 'test';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport Control from 'react-leaflet-control';\r\nimport { Button } from 'react-materialize';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      zoom: 13,\r\n      centerLat: 51.505,\r\n      centerLng: -0.09,\r\n      newMarketOn: true,\r\n      newMarkerIcon: {\r\n        lat: 0,\r\n        lng: 0\r\n      }\r\n    }\r\n  }\r\n\r\n  renderMarker(){\r\n    const items = [];\r\n    Object.entries(this.props.markers).forEach(function(data) {\r\n      const markerId = data[0];\r\n      const markerData = data[1];\r\n      items.push(\r\n        <Marker \r\n          key={markerId} \r\n          position={[markerData.lat, markerData.lng]}\r\n          //draggable={true}\r\n        />\r\n      );\r\n    });\r\n    return(<div>{items}</div>);\r\n  }\r\n\r\n  renderNewMarketIcon(){\r\n    if(this.state.newMarketOn){\r\n      return(\r\n        <Marker position={[this.state.newMarkerIcon.lat, this.state.newMarkerIcon.lng]}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  onChangeMapPosition(data){\r\n    this.setState({\r\n      newMarkerIcon: {\r\n        lat: data.center[0],\r\n        lng: data.center[1]\r\n      }\r\n    })\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map \r\n          center={[this.state.centerLat,this.state.centerLng]}\r\n          zoom={this.state.zoom}\r\n          onViewportChange={(data) => this.onChangeMapPosition(data)}\r\n        >\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.renderMarker()}\r\n          {this.renderNewMarketIcon()}\r\n          <Control position=\"topleft\" >\r\n            <Button  \r\n              onClick={ () => this.setState({bounds: [51.3, 0.7]}) }\r\n            >\r\n              Nuevo punto\r\n            </Button >\r\n          </Control>\r\n        </Map>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    markers: state.markers.markers\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\n\r\nconst Main = () => {\r\n  return(\r\n    <BrowserRouter>\r\n      <div>\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Main;","import 'materialize-css/dist/js/materialize.min.js'\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './css/customCss.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport Main from './components/Main';\n\n//TODO: quitar loger de redux dev tools para production\nconst store = createStore(reducers, {},\n  compose(\n    applyMiddleware(reduxThunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n  );\n\nReactDOM.render(\n  <Provider store={store}>\n      <Main />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}